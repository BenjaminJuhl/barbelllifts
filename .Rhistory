source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
outcome.data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
outcome.data[, 11] <- as.numeric(outcome.data[, 11])
is.na(outcome.data[, 11])
outcome.data[, 11] <- as.numeric(outcome.data[, 11])
data <- outcome.data %>% filter(State==state, !is.na(outcome.data[,11]))
data <- outcome.data %>% filter(State=="WY"", !is.na(outcome.data[,11]))
View(data)
View(data)
View(data)
View(outcome.data)
)
""
data <- outcome.data %>% filter(State=="WY", !is.na(outcome.data[,11]))
View(data)
data <- outcome.data %>% filter(State=="WY", !is.na(outcome.data[Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack]))
data <- outcome.data %>% filter(State=="WY", !is.na(outcome.data["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]))
View(data)
data <- NULL
View(outcome)
data <- outcome.data %>% filter(State=="WY", !is.na(outcome.data["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]))
View(data)
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
best("TX", "heart attack")
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
rankhospital("MD", "heart failure", 5)
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
x <- 12
class(x)
match(class(x), c("numeric","integer"))
x <- 12L
match(class(x), c("numeric","integer"))
x <- "fds"
match(class(x), c("numeric","integer"))
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
rankhospital("MD", "heart failure", 5)
rankhospital("3MD", "heart failure", 5)
rankhospital("MD", "heart failures", 5)
rankhospital("MD", "heart failure", "t")
rankhospital("MD", "heart failure", "worst")
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
rankhospital("MD", "heart failure", "worst")
rankhospital("MD", "heart failure", "worsth")
rankhospital("MD", "heart failure", 6)
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
outcome.data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
outcome <- "heart attack"
outcome.data[, 11] <- as.numeric(outcome.data[, 11])
data <- outcome.data %>% filter(State==state,
!is.na(outcome.data["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"])) %>%
arrange(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
Hospital.Name)
state <- "TX"
data <- outcome.data %>% filter(State==state,
!is.na(outcome.data["Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"])) %>%
arrange(Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,
Hospital.Name)
View(data)
length(data)
dim(data)
nrow(data)
num <- 1
data[1,2]
data[num,2]
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
rankhospital("MD", "heart failure", 5)
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 467)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
all.states <- unique(outcome.data$State)
all.states
class(all.states)
sapply(all.state, rankhospital(outcome="pneumonia",num=1))
?lapply
sapply(all.state, rankhospital(),outcome="pneumonia",num=1))
sapply(all.state, rankhospital(),outcome="pneumonia",num=1)
sapply(all.state, print())
sapply(all.states, rankhospital(),outcome="pneumonia",num=1))
sapply(all.states, rankhospital(),outcome="pneumonia",num=1)
sapply(all.states, rankhospital(),"pneumonia",1)
sapply(all.states, print()
)
sapply(all.states, rankhospital,outcome="pneumonia",num=1)
hoslist <- sapply(all.states, rankhospital,outcome="pneumonia",num=1)
hoslist <- sapply(all.states, rankhospital,outcome="pneumonia",num=12)
hoslist <- sapply(all.states, rankhospital,outcome="pneumonia",num=122)
?data.frame
my_df <- cbind(all.states,hoslist)
View(my_df)
x <- data.frame()
x[,2] <- all.states
x <- data.frame(54,2)
x
x <- data.frame(NA,all.states)
x
unique(outcome.data$state)
unique(outcome.data$State)
x <- data.frame(NA,all.states)
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
rankall("pneumonia",1)
all.states[2]
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
all.states[2]
seq_along(all.states)
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
rankall("pneumonia",1)
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
rankall("pneumonia",1)
x[54,1] <- "TEST"
x
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
head(rankall("heart attack", 20), 10)
names(x)
names(x) <- c("hospital","state")
names(x)
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
head(rankall("heart attack", 20), 10)
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
hospitals <- read.csv("hospital-data.csv", colClasses = "character")
unique(hospitals$State)
length(unique(hospitals$State))
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", "best")
rankhospital("MD", "heart failure", "worst")
rankhospital("MD", "pneumonia", "worst")
tail(rankall("pneumonia", "worst"), 3)
rankhospital("WY", "pneumonia", "worst")
rankhospital("WV", "pneumonia", "worst")
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
tail(rankall("pneumonia", "worst"), 3)
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
tail(rankall("pneumonia", "worst"), 3)
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20), 10)
source('E:/Home office/Data Scientist Specialization/R Programming/HospitalQuality.R')
getwd()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
day(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("Marcg 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd/25081985
ymd(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment,now())
this_moment<-update(this_moment,hours = 8, minutes = 34, seconds = 55)
this_moment
?now
nyc <- now(tzone="America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?which_tz
?'which_tz'
?'with_tz'
with_tz(arrive, tzone="Hong Kong")
?with_tz
with_tz(arrive, tzone="Asia/Hong_Kong")
arrive <- with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time <- my("June 17, 2008", tz = "Singapore")
last_time <- myd("June 17, 2008", tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(arrive, last_time)
how_long <- new_interval(last_time,arrive)
period(how_long)
skip()
stopwatch()
getwd()
div(9,2)
9 div 2
?+
)
513 %% 100
513 %/% 100
library(ggplot2)
qplot(votes,rating,data=movies)
movies <- movies
library(datasets)
data(movies)
data(airquality)
qplot(Wind,Ozone,data=airquality)
qplot(Wind,Ozone,data=airquality,smooth="loess")
qplot(Wind,Ozone,data=airquality) + geom_smooth()
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distcy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.4,col="red")
5
5
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
ditmt
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,sol=cols1,pch=8,cex=2,lwd=2)
points(newCx,newCy,sol=cols1,pch=8,cex=2,lwd=2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers, col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R)
""
)
"
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%matv
matu%*%diag%*t
matu*diag%*t
matu*diag%*%matv
matu*diag%*%t
dig*matu
diag*matu
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd$v[1:2,]
svd$v[1:2]
svd$v
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$d[,1]*svd1$d[1])%*%t(svd1$v)
a1 <- (svd1$d[1]*svd1$d[1])%*%t(svd1$v)
a1 <- (svd1$d[1]*svd1$d[1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
svd1$v[,1:2]
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(able(ssd$subject))
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd,subject==1)
sim(sub1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)],centers=6)
table(kClust$cluster,sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)],centers=6,nstart=100)
table(kClust$cluster,sub1$activity)
dim(kclust$centers)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|",fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
dates
str(dates)
dates <- as.Date(as.character(dates))
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates(negative),"month")
hist(dates[negative],"month")
str(aite0)
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.code == 63 & Site.ID == 2008)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(lwd=2,h=median(x0sub,na.rm=TRUE))
plot(dates1,x1sub,pch=20)
abline(lwd=2,h=median(x1sub,na.rm=TRUE))
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0),mean=mn0)
d1 <- data.frame(state=names(mn1),mean=mn1)
mrg <- merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3]))
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y,]
library(datasets)
data(mtcars)
ehad(mtcars)
head(mtcars)
str(mtcars)
?mtcars
pairs(mtcars)
plot(mpg,am,data=mtcars)
plot(mpg,am,data=mtcars)
plot(mtcars$mpg,mtcars$am)
plot(mtcars$am,mtcars$mpg)
corr(mtcars$mpg,mtcars$wt)
cor(mtcars$mpg,mtcars$wt)
update.packages()
install.packages("installr")
library(installr)
install.RStudio()
## read the data
data <- read.csv("pml-training.csv",na.strings=c("NA","","#DIV/0!"))
data <- tbl_df(data)
## remove the non accelorator variables
data <- data[,-(1:7)]
## remove columns with missing values
data <- data[,colSums(is.na(data))==0]
## remove near zero variance variables
nearzero <- nearZeroVar(data,saveMetrics = TRUE)
data <- data[,!nearzero$nzv]
dim(data)
setwd("E:/Home office/Data Scientist Specialization/PracticalMachineLearning/barbelllifts")
## read the data
data <- read.csv("pml-training.csv",na.strings=c("NA","","#DIV/0!"))
data <- tbl_df(data)
## remove the non accelorator variables
data <- data[,-(1:7)]
## remove columns with missing values
data <- data[,colSums(is.na(data))==0]
## remove near zero variance variables
nearzero <- nearZeroVar(data,saveMetrics = TRUE)
data <- data[,!nearzero$nzv]
dim(data)
library(dplyr)
## read the data
data <- read.csv("pml-training.csv",na.strings=c("NA","","#DIV/0!"))
data <- tbl_df(data)
## remove the non accelorator variables
data <- data[,-(1:7)]
## remove columns with missing values
data <- data[,colSums(is.na(data))==0]
## remove near zero variance variables
nearzero <- nearZeroVar(data,saveMetrics = TRUE)
data <- data[,!nearzero$nzv]
dim(data)
library(caret)
## read the data
data <- read.csv("pml-training.csv",na.strings=c("NA","","#DIV/0!"))
data <- tbl_df(data)
## remove the non accelorator variables
data <- data[,-(1:7)]
## remove columns with missing values
data <- data[,colSums(is.na(data))==0]
## remove near zero variance variables
nearzero <- nearZeroVar(data,saveMetrics = TRUE)
data <- data[,!nearzero$nzv]
dim(data)
sdata <- data[,-53]
scdata <- scale(sdata)
svd1 <- svd(scdata)
summary(svd1)
plot(svd1$u[,1])
plot(svd1$u[,1],col=data$classe)
plot(svd1$u[,2],col=data$classe)
par(mfrow=c(1,3))
plot(svd1$u[,1],col=data$classe)
plot(svd1$u[,2],col=data$classe)
plot(svd1$u[,3],col=data$classe)
modelrf <- train(classe~.,data=data,preProcess=c("center","scale"),method="rf")
install.packages("e1071")
modelrf <- train(classe~.,data=data,preProcess=c("center","scale"),method="rf")
